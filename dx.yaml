# Copyright 2024 HCL Technologies
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.8"

services:
  webengine:
    platform: linux/amd64
    container_name: dx-webengine
    image: ${DX_DOCKER_IMAGE_WEBENGINE:?'Missing docker image environment parameter'}
    user: "1000:1001"
    restart: unless-stopped
    ports:
      - "9080:9080"
      - "9443:9443"
    networks:
      - default
  ringapi:
    platform: linux/amd64
    container_name: dx-ringapi
    depends_on:
      - webengine
    image: ${DX_DOCKER_IMAGE_RINGAPI:?'Missing docker image environment parameter'}
    environment:
      - DEBUG=ringapi-server:*
      - PORTAL_PORT=9080
      - PORTAL_HOST=dx-webengine
    ports:
      - "4000:3000"
    networks:
      - default
  dam:
    platform: linux/amd64
    container_name: dx-dam
    depends_on:
      dam-db-pool:
        condition: service_healthy
    image: ${DX_DOCKER_IMAGE_DAM:?'Missing docker image environment parameter'}
    environment:
      - DEBUG=INFO:server-v1:*,ERROR:server-v1:*
      - POSTGRES_DB_NAME=dxmediadb
      - POSTGRES_DB_USER=dxuser
      - POSTGRES_DB_PORT=5432
      - POSTGRES_DB_PASSWORD=d1gitalExperience
      - POSTGRES_DB_HOST=dx-dam-db-pool
      - RING_API_HOST=dx-ringapi
      - RING_API_PORT=3000
      - IMAGE_PROCESSOR_API_HOST=dx-image-processor
      - IMAGE_PROCESSOR_API_PORT=8080
      - INTERNAL_BASE_API_HOST=dx-dam
      - INTERNAL_BASE_API_PORT=3001
      - DAM_CRUD_USER_PASSWORD=1234
      - DAM_CRUD_USER=damuser
      - DX_ADMIN=wpsadmin
      - DX_PASSWORD=wpsadmin
    ports:
      - "4001:3001"
    volumes:
      - ./volumes/dam/upload:/opt/app/upload
    networks:
      - default
  image-processor:
    platform: linux/amd64
    container_name: dx-image-processor
    image: ${DX_DOCKER_IMAGE_IMAGE_PROCESSOR:?'Missing docker image environment parameter'}
    environment:
      - DEBUG=INFO:server-v1:*,ERROR:server-v1:*
    ports:
      - "3500:8080"
    networks:
      - default
  cc:
    platform: linux/amd64
    container_name: dx-cc
    image: ${DX_DOCKER_IMAGE_CC:?'Missing docker image environment parameter'}
    ports:
      - "5001:3000"
    environment:
      - DEBUG=INFO:server-v1:*,ERROR:server-v1:*
      - PORTAL_PORT=9080
      - PORTAL_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - RING_API_HOST=dx-ringapi
      - RING_API_PORT=3000
    networks:
      - default
  dam-db-node-0:
    platform: linux/amd64
    container_name: dx-dam-db-node-0
    hostname: dx-dam-db-node-0
    image: ${DX_DOCKER_IMAGE_DAM_DB_NODE:?'Missing docker image environment parameter'}
    environment:
      - POSTGRES_DB=dxmediadb
      - POSTGRES_USER=dxuser
      - POSTGRES_PASSWORD=d1gitalExperience
      - POSTGRES_REPLICATION_USER=repdxuser
      - POSTGRES_REPLICATION_PASSWORD=d1gitalExperience
      - DAM_USER=damuser
      - POSTGRES_WAL_SENDERS=5
      - POSTGRES_WAL_KEEP_SEGMENTS=64
      - REPLICATION_DB=repmgr
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_PARTNER_NODES=dx-dam-db-node-0;
      - SYNCHRONOUS_COMMIT=off
      # The synchronous standby names value should be updated to "1 (*)" if the number of DB nodes is 2
      - SYNCHRONOUS_STANDBY_NAMES=
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5433:5432"
    volumes:
      - ./volumes/dam/db:/var/lib/pgsql/11/data
    networks:
      - default
  dam-db-pool:
    platform: linux/amd64
    container_name: dx-dam-db-pool
    image: ${DX_DOCKER_IMAGE_DAM_DB_CONNECTION_POOL:?'Missing docker image environment parameter'}
    ports:
      - 5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:dx-dam-db-node-0:5432
      - PGPOOL_MAX_POOL=15
      - PGPOOL_SR_CHECK_USER=repdxuser
      - PGPOOL_SR_CHECK_PASSWORD=d1gitalExperience
      - PGPOOL_SR_CHECK_DATABASE=repmgr
      - PGPOOL_POSTGRES_USERNAME=dxuser
      - PGPOOL_POSTGRES_PASSWORD=d1gitalExperience
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_POSTGRES_CUSTOM_USERS=damuser
      - PGPOOL_POSTGRES_CUSTOM_PASSWORDS=1234
    networks:
      - default
    depends_on:
      dam-db-node-0:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "sh scripts/healthcheck.sh"]
      interval: 30s
      timeout: 15s
      retries: 5
  haproxy:
    platform: linux/amd64
    image: ${DX_DOCKER_IMAGE_HAPROXY:?'Missing docker image environment parameter'}
    container_name: dx-haproxy
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 80:8081
    networks:
      - default
  opensearch:
    image: ${DX_DOCKER_IMAGE_OPENSEARCH:?'Missing docker image environment parameter'}
    container_name: dx-opensearch-manager
    hostname: dx-opensearch-manager
    environment:
      - HOSTNAME=dx-opensearch-manager
      - discovery.type=single-node
    volumes:
      - ./data/certs:/usr/share/opensearch/config/certs/admin-certs
      - ./data/certs:/usr/share/opensearch/config/certs/node-certs
    ports:
      - 9200:9200
    networks:
      - default
  file-processor:
    image: ${DX_DOCKER_IMAGE_FILE_PROCESSOR:?'Missing docker image environment parameter'}
    container_name: dx-fileprocessor
    hostname: dx-fileprocessor
    ports:
      - 9998:9998
    networks:
      - default
  search-middleware:
    image: ${DX_DOCKER_IMAGE_SEARCH_MIDDLEWARE:?'Missing docker image environment parameter'}
    container_name: dx-search-middleware
    hostname: dx-search-middleware
    environment:
      - OPENSEARCH_HOST=dx-opensearch-manager
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_BASIC_AUTH_ENABLED=false
      - OPENSEARCH_CERT_PATH=/certs/client.pem
      - OPENSEARCH_KEY_PATH=/certs/client-key.pem
      - OPENSEARCH_CA_PATH=/certs/root-ca.pem
      - HTTPS_KEY_PATH=/certs/tls.key
      - HTTPS_CERT_PATH=/certs/tls.crt
      - FILEPROCESSOR_HOST=dx-fileprocessor
    volumes:
      - ./data/certs:/certs
      - ./data/users/admin/username:/etc/config/admin/username
      - ./data/users/admin/password:/etc/config/admin/password
      - ./data/users/push-admin/username:/etc/config/push-admin/username
      - ./data/users/push-admin/password:/etc/config/push-admin/password
    ports:
      - 3000:3000
    networks:
      - default
  peopleservice:
    image: ${DX_DOCKER_IMAGE_PEOPLE_SERVICE:?'Missing docker image environment parameter'}
    pull_policy: if_not_present
    container_name: dx-peopleservice
    hostname: dx-peopleservice  
    depends_on:
      dam-db-pool:
        condition: service_healthy
    environment:
      - CLIENT_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - CLIENT_PORT=80
      - RING_API_HOST=dx-ringapi
      - RING_API_PORT=3000
      - CLIENT_CONTEXT=/dx/ui/people
      - API_SERVICE_CONTEXT=/dx/api/people/v1
      - DX_PORTLET_PAGE_CONTEXT=/wps/myportal/Practitioner/PeopleService
      - PG_HOST=dx-dam-db-pool
      - PG_PORT=5432
      - PG_USERNAME=dxuser
      - PG_PASSWORD=d1gitalExperience
      - DX_INTEGRATION_ENABLED=true
      - AUTH_STRATEGY=DX
      - USER_ROLE_STRATEGY=DX
      - DX_SESSION_COOKIE_NAME=JSESSIONID
      - JWT_TOKEN_EXPIRY=60000
      - DEBUG=INFO:people-service:*
    ports:
      - 7001:3000
    networks:
      - default
